from bson import json_util
from flask.json.provider import DefaultJSONProvider
from mongoengine.base import BaseDocument
from mongoengine.queryset import QuerySet

def _make_encoder(default_encoder):
    def mongoengine_json_encoder(obj):
        if isinstance(obj, BaseDocument):
            return json_util._json_convert(obj.to_mongo())
        elif isinstance(obj, QuerySet):
            return json_util._json_convert(obj.as_pymongo())
        return default_encoder(obj)
    return mongoengine_json_encoder

def override_json_encoder(app):
    """
    A function to override Flask's default JSON encoder to handle MongoEngine objects.
    """
    # Assign the custom encoder function to Flask's json provider
    app.json.default = _make_encoder(app.json.default)
